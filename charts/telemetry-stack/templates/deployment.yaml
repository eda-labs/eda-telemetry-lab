apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: telemetry-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: quay.io/prometheus/prometheus:v2.54.1
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --config.file=/etc/prometheus/prometheus.yml
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
      volumes:
        - name: config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  labels:
    app: telemetry-stack
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: telemetry-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:11.2.0
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: GF_INSTALL_PLUGINS
              value: "andrewbmchugh-flow-panel, volkovlabs-variable-panel"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_AUTH_ANONYMOUS
              value: "true"
            - name: GF_AUTH_OAUTH_AUTO_LOGIN
              value: "true"
          volumeMounts:
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/datasources/datasource.yml
              subPath: datasource.yml
            - name: grafana-config
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yml
              subPath: dashboards.yml
            - name: grafana-config
              mountPath: /var/lib/grafana/dashboards/st.json
              subPath: st.json
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-datasource
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: telemetry-stack
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  labels:
    app: telemetry-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:3.2.0
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --config.file=/etc/loki/loki-config.yml
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  labels:
    app: telemetry-stack
spec:
  ports:
    - port: 3100
      targetPort: 3100
  selector:
    app: loki
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  labels:
    app: telemetry-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
        - name: promtail
          image: grafana/promtail:3.2.0
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --config.file=/etc/promtail/promtail-config.yml
          volumeMounts:
            - name: promtail-config
              mountPath: /etc/promtail
      volumes:
        - name: promtail-config
          configMap:
            name: promtail-config
---
apiVersion: v1
kind: Service
metadata:
  name: promtail
  labels:
    app: telemetry-stack
spec:
  ports:
    - port: 1514
      targetPort: 1514
      protocol: UDP
  type: LoadBalancer
  selector:
    app: promtail
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alloy
  labels:
    app: telemetry-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alloy
  template:
    metadata:
      labels:
        app: alloy
    spec:
      containers:
        - name: alloy
          image: grafana/alloy:v1.6.1
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - run
            - --server.http.listen-addr=0.0.0.0:12345
            - --storage.path=/var/lib/alloy/data
            - /etc/alloy/config.alloy
          volumeMounts:
            - name: alloy-config
              mountPath: /etc/alloy
      volumes:
        - name: alloy-config
          configMap:
            name: alloy-config
---
apiVersion: v1
kind: Service
metadata:
  name: alloy
  labels:
    app: telemetry-stack
spec:
  ports:
    - port: 12345
      targetPort: 12345
  selector:
    app: alloy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: telemetry-stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: apache/kafka:3.9.0
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@localhost:9093"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://localhost:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka.eda-telemetry.svc.cluster.local:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: telemetry-stack
spec:
  ports:
    - port: 9092
      targetPort: 9092
  selector:
    app: kafka
